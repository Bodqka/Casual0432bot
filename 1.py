from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = '7675064862:AAELbDw84mVvSEgmIyUHGyIRM-yMb286_yo'
app = Application.builder().token(TOKEN).build()

# –û—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñüë•", callback_data='social')],
        [InlineKeyboardButton("–¢–æ–≤–∞—Ä–∏üëïüëñüëü", callback_data='products')],
        [InlineKeyboardButton("–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üÜò", callback_data='support')],
        [InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—ÅüèÜ", callback_data='contest')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)
    elif update.callback_query:
        await update.callback_query.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.message.delete()

    if query.data == 'social':
        keyboard = [
            [InlineKeyboardButton("InstagramüñºÔ∏è", callback_data='instagram')],
            [InlineKeyboardButton("Facebooküë§", callback_data='facebook')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='main_menu')]
        ]
        await query.message.reply_text("–ù–∞—à—ñ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == 'products':
        keyboard = [
            [InlineKeyboardButton("–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏üëïüëñüëü", callback_data='view_products')],
            [InlineKeyboardButton("OLX", callback_data='olx')],
            [InlineKeyboardButton("Shafa", callback_data='shafa')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='main_menu')]
        ]
        await query.message.reply_text("–¢–æ–≤–∞—Ä–∏:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == 'support':
        keyboard = [
            [InlineKeyboardButton("FAQ‚ö†", callback_data='faq')],
            [InlineKeyboardButton("–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫üìû", callback_data='contact')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='main_menu')]
        ]
        await query.message.reply_text("–ü—ñ–¥—Ç—Ä–∏–º–∫–∞:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == 'contest':
        await query.message.reply_photo(
            photo="https://drive.google.com/uc?export=view&id=166ydt8yJ7d55xQKJTm-8tfbVjOf-uk_A",
            caption="–†–æ–∑—ñ–≥—Ä–∞—à –°–≤–µ—Ç—Ä—É –≤—ñ–¥ –±—Ä–µ–Ω–¥—É Napapijri: [–ü–æ—Å—Ç —É Instagram](https://www.instagram.com/p/DBMGGlxs7Mm/)",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='main_menu')]])
        )

    elif query.data == 'instagram':
        await query.message.reply_photo(
            photo="https://drive.google.com/uc?export=view&id=14tDBbRixB2-Jcu_NaQPErZxUz_07VBsr",
            caption="–ù–∞—à Instagram: [Casual.0432](https://www.instagram.com/casual.0432/)",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='social')]])
        )

    elif query.data == 'facebook':
        await query.message.reply_photo(
            photo="https://drive.google.com/uc?export=view&id=150ZxQ-rQT155M3n1USLcs7pU0nutf3T8",
            caption="–ù–∞—à Facebook: [–ö–µ–∂—É–∞–ª –í—ñ–Ω–Ω–∏—Ü—è](https://www.facebook.com/profile.php?id=61555261808269)",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='social')]])
        )

    elif query.data == 'view_products':
        await query.message.reply_text(
            "–ü—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ü–∏–º....",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='products')]])
        )

    elif query.data == 'olx':
        await query.message.reply_photo(
            photo="https://drive.google.com/uc?export=view&id=14hjS6RyWKJ4y9oI9igs8BjmHOlKZ-Ge0",
            caption="–û–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–∞ OLX:\n[Casual Vinnytsya](https://olx.ua)",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='products')]])
        )

    elif query.data == 'shafa':
        await query.message.reply_photo(
            photo="https://drive.google.com/uc?export=view&id=14gIxVtNlHkm9HmHwIO9mizAfCgx0zsRV",
            caption="–û–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–∞ Shafa:\n[CASUAL 0432](https://shafa.ua)",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='products')]])
        )

    elif query.data == 'faq':
        await query.message.reply_text(
            "–ü—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ü–∏–º....",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='support')]])
        )

    elif query.data == 'contact':
        await query.message.reply_text(
            "–Ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è? –ó–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å: @casual0432support",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='support')]])
        )

    elif query.data == 'main_menu':
        await start(update, context)

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))

app.run_polling()

