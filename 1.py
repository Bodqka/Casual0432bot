from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = '7675064862:AAELbDw84mVvSEgmIyUHGyIRM-yMb286_yo'
app = Application.builder().token(TOKEN).build()

# –û—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñüë•", callback_data='social')],
        [InlineKeyboardButton("–¢–æ–≤–∞—Ä–∏üëïüëñüëü", callback_data='products')],
        [InlineKeyboardButton("–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üÜò", callback_data='support')],
        [InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—ÅüèÜ", callback_data='contest')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.message.delete()

    # –ú–µ–Ω—é —Ç–æ–≤–∞—Ä—ñ–≤
    if query.data == 'products':
        keyboard = [
            [InlineKeyboardButton("–í–∑—É—Ç—Ç—èüëü", callback_data='footwear')],
            [InlineKeyboardButton("–®—Ç–∞–Ω–∏üëñ", callback_data='pants')],
            [InlineKeyboardButton("–®–æ—Ä—Ç–∏ü©≥", callback_data='shorts')],
            [InlineKeyboardButton("–§—É—Ç–±–æ–ª–∫–∏üëï", callback_data='tshirts')],
            [InlineKeyboardButton("–ö–æ—Ñ—Ç–∏üß•", callback_data='sweatshirts')],
            [InlineKeyboardButton("–ö—É—Ä—Ç–∫–∏üß•", callback_data='jackets')],
            [InlineKeyboardButton("–ê–∫—Å–µ—Å—É–∞—Ä–∏üëú", callback_data='accessories')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='main_menu')]
        ]
        await query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ç–æ–≤–∞—Ä—ñ–≤:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –í–∑—É—Ç—Ç—è
    elif query.data == 'footwear':
        keyboard = [
            [InlineKeyboardButton("–ß–æ–ª–æ–≤—ñ—á–µ", callback_data='mens_footwear')],
            [InlineKeyboardButton("–ñ—ñ–Ω–æ—á–µ", callback_data='womens_footwear')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='products')]
        ]
        await query.message.reply_text("–í–∑—É—Ç—Ç—è:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –ñ—ñ–Ω–æ—á–µ –≤–∑—É—Ç—Ç—è
    elif query.data == 'womens_footwear':
        keyboard = [
            [InlineKeyboardButton("–ö–µ–¥–∏ Vans Old Skool", callback_data='vans_old_skool')],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='footwear')]
        ]
        await query.message.reply_text("–ñ—ñ–Ω–æ—á–µ –≤–∑—É—Ç—Ç—è:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –¢–æ–≤–∞—Ä: –ö–µ–¥–∏ Vans Old Skool
    elif query.data == 'vans_old_skool':
        description = (
            "–ö–µ–¥–∏ Vans Old Skool\n"
            "- –ñ—ñ–Ω–æ—á—ñ\n"
            "- –†–æ–∑–º—ñ—Ä: 38\n"
            "- –°—Ç–∞–Ω: –Ü–¥–µ–∞–ª—å–Ω–∏–π\n"
            "–¶—ñ–Ω–∞: 800 –≥—Ä–Ω\n\n"
            "–§–æ—Ç–æ:\n"
            "https://drive.google.com/file/d/1fB8Gvd0DllFqURyldQjKhLvlnyXO6MtM/view\n"
            "https://drive.google.com/file/d/1fFoLVOsuGJOCWP6Qa3KCFEMkGnBjRis1/view\n"
            "https://drive.google.com/file/d/1fJ4mxJj1SbH2FMmOD07MWV04bHXVTOY2/view\n"
            "https://drive.google.com/file/d/1fMaz9pBzddVQutFleqJAp2fXBZacA1cK/view\n"
            "https://drive.google.com/file/d/1fT6gG8BEHXUuGjl-UycwS0JtjS5JCYfQ/view\n"
            "https://drive.google.com/file/d/1fWoa_zPWSyUdJ2E-hEvqXm2l3Vn6i8AG/view\n"
        )
        
        keyboard = [
            [InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏", url="https://t.me/casual0432support")],
            [InlineKeyboardButton("–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚óÄ", callback_data='womens_footwear')]
        ]
        await query.message.reply_text(description, reply_markup=InlineKeyboardMarkup(keyboard))

    # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    elif query.data == 'main_menu':
        await start(update, context)

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))

app.run_polling()
